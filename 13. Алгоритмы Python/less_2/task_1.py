"""
1.	Написать программу, которая будет складывать, вычитать, умножать или делить
два числа. Числа и знак операции вводятся пользователем. После выполнения
вычисления программа не должна завершаться, а должна запрашивать новые данные
для вычислений. Завершение программы должно выполняться при вводе символа '0'
в качестве знака операции. Если пользователь вводит неверный знак
(не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, /
- условие завершения рекурсии - введена операция 0

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""


def calculate_rec():
	operand = '+-*/0'
	usr_operand = input('Введите операцию (+, -, *, / или 0 для выхода): ')
	if usr_operand == '0':
		return print('See you later. Bye-Bye')
	if usr_operand not in operand:
		print('Ошибка')
		return calculate_rec()
	try:
		usr_num1 = int(input('Введите первое число: '))
		usr_num2 = int(input('Введите второе число: '))
	except (TypeError, ValueError): 
		print('Вы ввели не число. Исправьтесь')
		return calculate_rec()
	if usr_operand == '+':
		total = usr_num1 + usr_num2
		print(f'Результат: {total}')
	elif usr_operand == '-':
		total = usr_num1 - usr_num2
		print(f'Результат: {total}')
	elif usr_operand == '*':
	 	total = usr_num1 * usr_num2
	 	print(f'Результат: {total}')
	elif usr_operand == '/':
	 	try:
	 		total = usr_num1 / usr_num2
	 	except ZeroDivisionError as e:
	 		print(f'Error! {e}')
	return calculate_rec()

calculate_rec()
