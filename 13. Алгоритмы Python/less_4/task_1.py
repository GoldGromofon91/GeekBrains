"""
Задание 1.

Приведен код, который позволяет сохранить в
массиве индексы четных элементов другого массива

Сделайте замеры времени выполнения кода с помощью модуля timeit

Попробуйте оптимизировать код, чтобы снизить время выполнения
Проведите повторные замеры

Добавьте аналитику: что вы сделали и почему
"""
import timeit

def func_1(nums):
    new_arr = []
    for i in range(len(nums)):
        if nums[i] % 2 == 0:
            new_arr.append(i)
    return new_arr

#Код меньше, лаконичней, при n> 10000 работает гораздо быстрее!
def func_1_mod_1(nums):
    new_arr = [i for i in nums if i % 2 == 0]
    return new_arr

# print(func_1([1,2,3,100,199,154]))
if __name__=='__main__':
    from timeit import Timer
    t_1 = Timer(lambda: func_1([1,2,3,100,199,154]))
    print (f'func_1: {t_1.timeit(number=1000000)}')

    t_2 = Timer(lambda: func_1_mod_1([1,2,3,100,199,154]))
    print (f'func_m: {t_2.timeit(number=1000000)}')


"""!!!Сложность данной функции линейная, однако время выполнения 
гораздо больше чем при использовании встроенных функций Python"""